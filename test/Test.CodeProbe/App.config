<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="codeProbe" type="CodeProbe.Configuration.CodeProbeConfigurationSection, CodeProbe" />
  </configSections>
  <codeProbe>
    <reporting>
      <extractors>
        <add name="test_ext" type="CodeProbe.Reporting.Extractors.TimedSampleExtractor, CodeProbe.Reporting">
          <args>
            <add name="period" value="60000" />
          </args>
        </add>
      </extractors>
      <reporters>
        <add name="test_rep" type="CodeProbe.Reporting.Reporters.JsonReporter, CodeProbe.Reporting" extractorRef="test_ext">
          <sampler name="test_sampler" type="CodeProbe.Reporting.Samplers.BasicSampler, CodeProbe.Reporting">
            <stats>
              <add type="CodeProbe.Reporting.Statistics.Gauge.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Counter.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Meter.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearAvgStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearMinStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearMaxStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.ConstantRatioStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.ConstantRatioStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearAvgStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearMinStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearMaxStatistic, CodeProbe.Reporting" />
            </stats>
          </sampler>
          <args>
            <add name="savePath" value="C:\Progetti\CodeProbe\test\Test.CodeProbe.Reporting.Remote\reports\{0:yyyyMMdd}_{1}.json" />
          </args>
        </add>
      </reporters>
    </reporting>
    <remoteReporting remoteExtractorNamePrefix="remote">
      <probeServiceAggregators>
        <add name="classe">
          <endpoints>
            <add name="0" value="url...." />
          </endpoints>
          <checkAllPolicy type="CodeProbe.HealthChecks.Policy.ZeroNullCheckAllPolicy, CodeProbe.HealthChecks"/>
        </add>
      </probeServiceAggregators>
      <probeServices>
        <add name="Test.CodeProbe.Reporting.Remote.TestService">
          <sampler name="test_remote_sampler" type="CodeProbe.Reporting.Samplers.BasicSampler, CodeProbe.Reporting">
            <stats>
              <add type="CodeProbe.Reporting.Statistics.Gauge.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Counter.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Meter.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearAvgStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearMinStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearMaxStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.ConstantRatioStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.ConstantRatioStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearAvgStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearMinStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearMaxStatistic, CodeProbe.Reporting" />
            </stats>
          </sampler>
          <checkAllPolicy type="CodeProbe.HealthChecks.Policy.ZeroNullCheckAllPolicy, CodeProbe.HealthChecks" />
        </add>
      </probeServices>
    </remoteReporting>
    <healthchecks>
      <checks>
        <add name="test_hc" type="Test.CodeProbe.HealthChecks.utility.TestHealtCheck, Test.CodeProbe.HealthChecks" />
      </checks>
    </healthchecks>
    <sensing>
      <reservoir type="CodeProbe.Sensing.SlidingWindowReservoir`1, CodeProbe">
        <args>
          <add name="size" value="100" />
        </args>
      </reservoir>
    </sensing>
  </codeProbe>
</configuration>