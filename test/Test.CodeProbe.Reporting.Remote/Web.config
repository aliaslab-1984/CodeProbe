<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="codeProbe" type="CodeProbe.Configuration.CodeProbeConfigurationSection, CodeProbe" />
  </configSections>
  <codeProbe>
    <reporting>
      <extractors>
        <add name="test_ext" type="CodeProbe.Reporting.Extractors.TimedSampleExtractor, CodeProbe.Reporting">
          <args>
            <add name="period" value="60000" />
          </args>
        </add>
      </extractors>
      <reporters>
        <add name="test_rep" type="CodeProbe.Reporting.Reporters.JsonReporter, CodeProbe.Reporting" extractorRef="test_ext">
          <sampler name="test_sampler" type="CodeProbe.Reporting.Samplers.BasicSampler, CodeProbe.Reporting">
            <stats>
              <add type="CodeProbe.Reporting.Statistics.Gauge.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Counter.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Meter.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearAvgStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearMinStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearMaxStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.ConstantRatioStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.ConstantRatioStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearAvgStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearMinStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearMaxStatistic, CodeProbe.Reporting" />
            </stats>
          </sampler>
          <args>
            <add name="savePath" value="C:\Progetti\CodeProbe\test\Test.CodeProbe.Reporting.Remote\reports\{0:yyyyMMdd}_{1}.json" />
          </args>
        </add>
      </reporters>
    </reporting>
    <remoteReporting remoteExtractorNamePrefix="remote" probeServiceBindingName="ProbeServiceWebHttpBinding">
      <probeServiceAggregators>
        <add name="Test.CodeProbe.Reporting.Remote.AggregateTestService">
          <endpoints>
            <add name="i0" endpoint="http://localhost:28404/TestService.svc/test" severity="123" />
          </endpoints>
          <checkAllPolicy type="CodeProbe.HealthChecks.Policy.ZeroNullCheckAllPolicy, CodeProbe.HealthChecks"/>
        </add>
      </probeServiceAggregators>
      <probeServices>
        <add name="Test.CodeProbe.Reporting.Remote.TestService">
          <sampler name="test_remote_sampler" type="CodeProbe.Reporting.Samplers.BasicSampler, CodeProbe.Reporting">
            <stats>
              <add type="CodeProbe.Reporting.Statistics.Gauge.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Counter.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Meter.ConstantStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearAvgStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearMinStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Histogram.LinearMaxStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.ConstantRatioStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.ConstantRatioStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearAvgStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearMinStatistic, CodeProbe.Reporting" />
              <add type="CodeProbe.Reporting.Statistics.Timer.LinearMaxStatistic, CodeProbe.Reporting" />
            </stats>
          </sampler>
          <checkAllPolicy type="CodeProbe.HealthChecks.Policy.ZeroNullCheckAllPolicy, CodeProbe.HealthChecks" />
        </add>
      </probeServices>
    </remoteReporting>
    <healthchecks>
      <checks>
        <add name="test_hc" type="Test.CodeProbe.HealthChecks.utility.TestHealtCheck, Test.CodeProbe.HealthChecks" />
        <add name="test_hc_f" type="Test.CodeProbe.HealthChecks.utility.TestHealtCheckFail, Test.CodeProbe.HealthChecks" />
      </checks>
    </healthchecks>
    <sensing>
      <reservoir type="CodeProbe.Sensing.SlidingWindowReservoir`1, CodeProbe">
        <args>
          <add name="size" value="100" />
        </args>
      </reservoir>
    </sensing>
  </codeProbe>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>
  <system.serviceModel>
    <bindings>
      <webHttpBinding>
        <binding name="ProbeServiceWebHttpBinding" maxBufferSize="104857600" maxBufferPoolSize="104857600" maxReceivedMessageSize="104857600">
          <readerQuotas maxDepth="100" maxStringContentLength="104857600" maxArrayLength="104857600" maxBytesPerRead="104857600" maxNameTableCharCount="104857600" />
        </binding>
      </webHttpBinding>
      <basicHttpBinding>
        <binding name="ProbeServiceWebHttpBinding" maxBufferSize="104857600" maxBufferPoolSize="104857600" maxReceivedMessageSize="104857600">
          <readerQuotas maxDepth="100" maxStringContentLength="104857600" maxArrayLength="104857600" maxBytesPerRead="104857600" maxNameTableCharCount="104857600" />
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name="restJsonConf">
          <webHttp defaultOutgoingResponseFormat="Json" />
        </behavior>
        <behavior name="restXmlConf">
          <webHttp defaultOutgoingResponseFormat="Xml" />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the value below to false before deployment -->
          <serviceMetadata httpGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
    <services>
      <service name="Test.CodeProbe.Reporting.Remote.TestService">
        <endpoint behaviorConfiguration="restXmlConf" binding="webHttpBinding" bindingName="ProbeServiceWebHttpBinding" contract="CodeProbe.Reporting.Remote.IProbeService" />
        <endpoint address="test" binding="basicHttpBinding" bindingName="ProbeServiceWebHttpBinding" contract="CodeProbe.Reporting.Remote.IProbeService" />
      </service>
      <service name="Test.CodeProbe.Reporting.Remote.AggregateTestService">
        <endpoint behaviorConfiguration="restXmlConf" binding="webHttpBinding" bindingName="ProbeServiceWebHttpBinding" contract="CodeProbe.Reporting.Remote.IProbeService" />
      </service>
    </services>
  </system.serviceModel>
 <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>
  <appSettings>
    <!-- @@@@@@@@@@@@@@@@@@@@@@@@ logging @@@@@@@@@@@@@@@@@@@@@@@@ -->
    <add key="log4net.Config" value="log4net.config" />
    <add key="log4net.Config.Watch" value="True" />
  </appSettings>

</configuration>
